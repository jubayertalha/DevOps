frontend:
  deployment:
    name: frontend-deployment
    app: frontend
    replicas: 1
    image: myacr221.azurecr.io/springboot
    tag: v1.0
    containerPort: 8080
    pullPolicy: Always

  service:
    name: frontend-service
    port: 8080

env:
  JDBC_CONNECTION:
    name: JDBC_CONNECTION
    value: "jdbc:sqlserver://host.docker.internal;databaseName=develop;sendStringParametersAsUnicode=false;user=developerHead;password=developerHead;encrypt=true;trustServerCertificate=true;"
  READ_UNCOMMITTED_JDBC_CONNECTION:
    name: READ_UNCOMMITTED_JDBC_CONNECTION
    value: "jdbc:sqlserver://host.docker.internal;databaseName=develop;sendStringParametersAsUnicode=false;user=developerHead;password=developerHead;encrypt=true;trustServerCertificate=true;"
  REPORTING_JDBC_CONNECTION:
    name: REPORTING_JDBC_CONNECTION
    value: "jdbc:sqlserver://host.docker.internal;databaseName=develop-R;sendStringParametersAsUnicode=false;user=developerHead;password=developerHead;encrypt=true;trustServerCertificate=true;"

secret:
  name: storage-secret
  type: Opaque
  azurestorageaccountname: myblob221
  azurestorageaccountkey: "ezfxxW0gsext9cK7uOVkH2N07xAru7wzfnAT6q+6P26G9Ld65f+wyHu5HUs527PmLvQLBStIl1gf+AStLPWOuQ=="

volume:
  name: config-pv
  storage: 10Gi
  accessModes: ReadWriteMany
  reclaimPolicy: Retain
  handle: configpv221
  containerName: datacontainer

pvc:
  name: config-pvc
  accessModes: ReadWriteMany
  storage: 10Gi

mount:
  name: config-mount
  path: "/var/spring/shared"
  
ingress:
  name: spring-ingress
  class: nginx
  path: /
  pathType: Prefix