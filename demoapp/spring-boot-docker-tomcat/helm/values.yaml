frontend:
  deployment:
    name: frontend-deployment
    app: frontend
    replicas: 1
    image: myacr221.azurecr.io/springboot
    tag: v1.0
    containerPort: 8080
    pullPolicy: Always

  service:
    name: frontend-service
    port: 80
    type: LoadBalancer

env:
  JDBC_CONNECTION:
    name: JDBC_CONNECTION
    value: "jdbc:sqlserver://host.docker.internal;databaseName=develop;sendStringParametersAsUnicode=false;user=developerHead;password=developerHead;encrypt=true;trustServerCertificate=true;"
  READ_UNCOMMITTED_JDBC_CONNECTION:
    name: READ_UNCOMMITTED_JDBC_CONNECTION
    value: "jdbc:sqlserver://host.docker.internal;databaseName=develop;sendStringParametersAsUnicode=false;user=developerHead;password=developerHead;encrypt=true;trustServerCertificate=true;"
  REPORTING_JDBC_CONNECTION:
    name: REPORTING_JDBC_CONNECTION
    value: "jdbc:sqlserver://host.docker.internal;databaseName=develop-R;sendStringParametersAsUnicode=false;user=developerHead;password=developerHead;encrypt=true;trustServerCertificate=true;"

secret:
  name: storage-secret
  type: Opaque
  azurestorageaccountname: myblob221
  azurestorageaccountkey: "ezfxxW0gsext9cK7uOVkH2N07xAru7wzfnAT6q+6P26G9Ld65f+wyHu5HUs527PmLvQLBStIl1gf+AStLPWOuQ=="

volume:
  name: config-pv
  storage: 10Gi
  accessModes: ReadWriteMany
  reclaimPolicy: Retain
  handle: configpv221
  containerName: datacontainer

pvc:
  name: config-pvc
  accessModes: ReadWriteMany
  storage: 10Gi

mount:
  name: config-mount
  path: "/var/spring/shared"

tlsSecret:
  name: ca-tls
  crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUdTekNDQlRPZ0F3SUJBZ0lSQU1mYThXMWpDeTZCZmUrRklublpVNlF3RFFZSktvWklodmNOQVFFTEJRQXcKZ1k4eEN6QUpCZ05WQkFZVEFrZENNUnN3R1FZRFZRUUlFeEpIY21WaGRHVnlJRTFoYm1Ob1pYTjBaWEl4RURBTwpCZ05WQkFjVEIxTmhiR1p2Y21ReEdEQVdCZ05WQkFvVEQxTmxZM1JwWjI4Z1RHbHRhWFJsWkRFM01EVUdBMVVFCkF4TXVVMlZqZEdsbmJ5QlNVMEVnUkc5dFlXbHVJRlpoYkdsa1lYUnBiMjRnVTJWamRYSmxJRk5sY25abGNpQkQKUVRBZUZ3MHlNekF4TURNd01EQXdNREJhRncweU5EQXhNRE15TXpVNU5UbGFNQjR4SERBYUJnTlZCQU1URTJGdwpjQzUwWVd4b1lXcDFZbUY1WlhJdWJXVXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCCkFRRE1PRW1oM2tPamdvMTI2SDVUekpadlFtN1cza1ZuTU5RUmhJWDFEbXJQOTZ5cW5rZ0NDRWYwM00xWDRqSDAKcnFOOEJnZ1pGOWJOZ3BxRkQrM0kvRmpvV1ZlSXFaU3N4TGlxT0lIUHp5M3o2S0dPS1lqQVMwMFl0dFdxako2Tgp0SXhYTWtvd0NjV2ovMHBnU3k1d3VFaDdQc3JZYnh6QXF0d1A5ekk3dzZLOGhMdW5NTWVWWlRRcTROKzNvYTlxCkpBM2N2Vy96ekVvQVR0R1VpeGxNdk16Vklaelowd3VjSi9HdFljNUpJZlZxelNMSGdOYkhuVW5NTEk3NDBia3UKR2tXNWRpb1VBa2hTeW15eDcrV1EyL3NSTlBjSnNidktMcDlaQXlHMFV6TVB3a1hPUWd0TzVoKy82b1BUVGI3cwpyRkM3UTkwS1pqMWNhNC9uYnFPSmd4RVhBZ01CQUFHamdnTVFNSUlERERBZkJnTlZIU01FR0RBV2dCU05qRjdFClZLMks0WGZwbS9tYkJlRzRBWTFoNFRBZEJnTlZIUTRFRmdRVTBHYkJOeG13UWR4NU1aSnJlYktZbWFTKzh2NHcKRGdZRFZSMFBBUUgvQkFRREFnV2dNQXdHQTFVZEV3RUIvd1FDTUFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSApBd0VHQ0NzR0FRVUZCd01DTUVrR0ExVWRJQVJDTUVBd05BWUxLd1lCQkFHeU1RRUNBZ2N3SlRBakJnZ3JCZ0VGCkJRY0NBUllYYUhSMGNITTZMeTl6WldOMGFXZHZMbU52YlM5RFVGTXdDQVlHWjRFTUFRSUJNSUdFQmdnckJnRUYKQlFjQkFRUjRNSFl3VHdZSUt3WUJCUVVITUFLR1EyaDBkSEE2THk5amNuUXVjMlZqZEdsbmJ5NWpiMjB2VTJWagpkR2xuYjFKVFFVUnZiV0ZwYmxaaGJHbGtZWFJwYjI1VFpXTjFjbVZUWlhKMlpYSkRRUzVqY25Rd0l3WUlLd1lCCkJRVUhNQUdHRjJoMGRIQTZMeTl2WTNOd0xuTmxZM1JwWjI4dVkyOXRNRGNHQTFVZEVRUXdNQzZDRTJGd2NDNTAKWVd4b1lXcDFZbUY1WlhJdWJXV0NGM2QzZHk1aGNIQXVkR0ZzYUdGcWRXSmhlV1Z5TG0xbE1JSUJnQVlLS3dZQgpCQUhXZVFJRUFnU0NBWEFFZ2dGc0FXb0Fkd0IyLzRnL0NyYjdsVkhDWWN6MWg3bzB0S1ROdXluY2FFSUtuK1puClRGbzZkQUFBQVlWNFJxSTdBQUFFQXdCSU1FWUNJUUQ0VUR5b3JtajNyZmsyZ3dUejlDdFNEQUl0Ui9jVzJuaXYKR29ia0czdXpTZ0loQUl6cVJ6NmdkZkYzUThVOUVIMUhjVERuUFU2MzJGTUdJRXBLK0lpWWUxZDhBSFlBMnJhLwpheisxdGlLZm04SzdYR3ZvY0pGeGJMdFJoSVUwdmFROU1FalgrNnNBQUFHRmVFYWgvd0FBQkFNQVJ6QkZBaUVBCmxqSnphNVJkcXRkWE9ScUdFanVqQ2ZEbUtDN1ZjazZ6UGtvN2NzNkRZY01DSUUzbjhaSzM1aU1rOGd3bkJDR08KZ04zSTZ2dlArQ1ZBTjk5UDhodzNKZXgxQUhjQTdzM1FaTlhiR3M3RlhMZWR0TTBUb2pLSFJueTg3TjdEVVVoWgpSbkVmdFpzQUFBR0ZlRWFoMVFBQUJBTUFTREJHQWlFQTNpQXJpZlRTS2twdXdvbDlnQ2ZUZnZVTi9NK2RySzdFClV0TmRrVzFpWTJBQ0lRQ2VUZ1NsdkRIUEMzQXNUNk1UdC9qdk1NdjlORDlZbUpScm01NVU1U1BxTWpBTkJna3EKaGtpRzl3MEJBUXNGQUFPQ0FRRUFLR0JWeFJ0K0o3YVFTZTRmS0pUQm1nZDN1YUhrYWJoeTg5OHZDamlGeXNWSgpBNmtxSHFFZDJEb2pVUWhVWUtPTTJSYm95d2g0ZERORHVVSFpjT1JtQllHbnZMVVhQVUc1VUdjVC9DWXNFSDgwCjdub1M5TFQ3N3lObWhFK2dxeVhCUUt3dk14ZnNBQkVoeHlNcy82M0hhaUh4OVpHSnRhVXJpL3BrTXNpTlQyZE8KTVV3NnVTRzBlYTM2TUVtYzlNcGgweS9YQVZ0NmhkLzE5NXdYTnZoc1IydWZsU3V5dnMrdDNFd0NiK0lVWVNFNgplYlQ5RGlQSG0wZ3FUcVNBc0tsMzZFRWVSaTU3Sm5DeHVBZTVTTWpSb2FhQ0pHcExYUlYwcTMrVUgwSGlWQ3E3CmRld3Q2VFc5M2M1Uy9oelJhMDdJc0d4aHRUMWZYTlF5RjhzbjN5bmk2Zz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBekRoSm9kNURvNEtOZHVoK1U4eVdiMEp1MXQ1Rlp6RFVFWVNGOVE1cXovZXNxcDVJCkFnaEg5TnpOVitJeDlLNmpmQVlJR1JmV3pZS2FoUS90eVB4WTZGbFhpS21Vck1TNHFqaUJ6ODh0OCtpaGppbUkKd0V0TkdMYlZxb3llamJTTVZ6SktNQW5Gby85S1lFc3VjTGhJZXo3SzJHOGN3S3JjRC9jeU84T2l2SVM3cHpESApsV1UwS3VEZnQ2R3ZhaVFOM0wxdjg4eEtBRTdSbElzWlRMek0xU0djMmRNTG5DZnhyV0hPU1NIMWFzMGl4NERXCng1MUp6Q3lPK05HNUxocEZ1WFlxRkFKSVVzcHNzZS9sa052N0VUVDNDYkc3eWk2ZldRTWh0Rk16RDhKRnprSUwKVHVZZnYrcUQwMDIrN0t4UXUwUGRDbVk5WEd1UDUyNmppWU1SRndJREFRQUJBb0lCQVFEQ0dVbWFxSmJmQk1tUgoxNzJoeGhUQklJSWFoTjJ3QzArMGFxR3JYWTJWcGxDZFJaMHBHVmZTMmozdEpwYldlVm4zR2dCK1lSTU85dkFJClFqQjkwNkpwQytsUGdlWkdJeDlrNGhvM09qSHgzZ3dYQTFEdmUyS0dkOWd5cGo1WWJ0N29UV3NIcDNJS3dpeWQKd3pjYmVYdWliL2I1cVBuS0FWcnhiY0IzM3lTQVNYQ09EZzJjM2hlMWVKVS9ueDBkRUQ3V0ZRbzdLaEJSamlRbQppeVlld0dReks2S2t3OVRQQlBCOThqZ3lnZjhpQlNldkU1eHZLNzNabkFJOTAyMkFHd3pxWklIYk1oVVFWajFJCjdwZlZxa1B6bjU4ekVWcklMdHZaeHpudmNsNThTYXRDaWlJSnR4Rk44Vm42MDBHSlNjRllpdFA5K0dicFRUUTIKNkRyMFNQSjVBb0dCQVBGakVDcTg5UTVOY0p2bjZNL1VOaURiUUZFT3l4V1p0cFowSVNpckRvRml6c2M3cFJuSwpHSk0yZjZhZ0hjU1JzMUNCd3lBVlVjT0JWMk9aWHM4M0Y1clpSSkJTcktwc2NYMm04cEdoSFRGcnpCeEEycUt1ClV5UFVJbEIwZjlrQ3BvWlFZeFE0a1U0MXhkaDZTNHlsRVZic05IM1EzbzFubTdqdzl6Ni9EYTQ5QW9HQkFOaVYKT0kveDVFbFgzY3hla0VDaHBCemtpZyszUi9oOEJZcmlWMVlBaGJiSk5ndW9NRzNCSXZpVHN1MkJzVG5ySVRRMApwN1VRMUdNdkw2Y3Q3UjZsclliNFZtaGFCRHh3eTZadjZwQXFhTUhhc1Jjc0ZVMDVVNTQ4bGM0Y1dBSzFwVC8yCkhzTzI1REVBOWcwa05VS1c3Y3FTbzlyK2s0eUZyU0FsbDYxbTZlWGpBb0dCQU56N1lNaVBkaFNpNW0yRU1JbGEKOERiQ0lhNVRTYTQ3cTRFdlRVL3EwWHUzMWk5a3RpL1c2UXFVUU9acy9QT0FvMVVYaG1ldnZNdXJkREpWTFF1cwpsdXFHN3hMazdQZVVFWTREc1Z1SzBLdjIwTVFveHo5Wk1mbkI4YXdRQ3g3REkyb2cyNk9lYWIvYzBJUHU2WTBYCmJMbFR3blpRS2Yzd0ZRcUpadi9GYmlQTkFvR0FZRk9kNEllWkhQV3pkQjNxMHBRUnhiZnZuNlhJb0wrb1IyajcKcHdoOGNCdDFxaUdYeUhqSjhQemY2N3B1OUcrYlNQalNUam01L0pNVUFxcnVkMThBbXJNQTIxQ042Y1BSRDZsZgpEZGVPMkFsSUVpSk5KeGVFRlRDbEFCS2pJakZmMmQ3Qk9CS3owd2UyWjRuZkZrckNZQUp3VmdvNzNaZm10QkdFCk1GOUJVRGtDZ1lFQXMzMzRNNkRCSXBQUzlXbWR4OEhxSUpXa3huK1lhamxSVW44aUJKbjVuNWVUQm9aV3RldlAKZG1udDMwUkp4cVU5TldwenBxa0VaeVJCN3N3NmZuL0pGUEZYZXpSN0pYdWYyS21rWWNxUmovR2NTQ0ZYNkZHOQp1OXhxSXdXYVNyZm9UM1c3Z2I4ckVSdXQvOUh3bzZOYnNybVpmU3J4RVJJZVpKZWFzU3c5a3FzPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==

ingress:
  name: spring-ingress
  hots: app.talhajubayer.me
  path: /