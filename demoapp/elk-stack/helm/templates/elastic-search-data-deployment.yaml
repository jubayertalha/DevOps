apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.elastic.deployment.name }}-data
  labels:
    app: {{ .Values.elastic.deployment.app }}-data
spec:
  serviceName: {{ .Values.elastic.service.name }}-data
  replicas: {{ .Values.elastic.deployment.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.elastic.deployment.app }}-data
  template:
    metadata:
      labels:
        app: {{ .Values.elastic.deployment.app }}-data
    spec:
      containers:
      - name: {{ .Values.elastic.deployment.app }}-data
        image: "{{ .Values.elastic.deployment.image }}:{{ .Values.elastic.deployment.tag }}"
        imagePullPolicy: {{ .Values.elastic.deployment.pullPolicy }}
        ports:
        - containerPort: {{ .Values.elastic.deployment.containerPortDB }}
          name: {{ .Values.elastic.deployment.containerPortDBName }}
        - containerPort: {{ .Values.elastic.deployment.containerPortTrans }}
          name: {{ .Values.elastic.deployment.containerPortTransName }}
        env:
        - name: "cluster.name"
          value: "es-cluster"
        - name: "node.roles"
          value: "data,ingest,transform"
        - name: "discovery.seed_hosts"
          value: "{{ .Values.elastic.service.name }}"
        - name: "cluster.initial_master_nodes"
          value: "{{ .Values.elastic.deployment.app }}-master-0,{{ .Values.elastic.deployment.app }}-master-1"
        - name: "xpack.security.transport.ssl.enabled"
          value: "true"
        - name: "xpack.security.transport.ssl.verification_mode"
          value: "certificate"
        - name: "xpack.security.transport.ssl.client_authentication"
          value: "optional"
        - name: "xpack.security.transport.ssl.key"
          value: "/usr/share/elasticsearch/config/ssl/tls.key"
        - name: "xpack.security.transport.ssl.certificate"
          value: "/usr/share/elasticsearch/config/ssl/tls.crt"
        - name: "xpack.security.transport.ssl.certificate_authorities"
          value: "/usr/share/elasticsearch/config/ssl/tls.crt"
        - name: "network.host"
          value: 0.0.0.0
        - name: "xpack.security.enabled"
          value: "true"
        - name: "xpack.security.authc.api_key.enabled"
          value: "true"
        - name: "discovery.type"
          value: "multi-node"
        - name: "ES_JAVA_OPTS"
          value: "-Xms750m -Xmx750m"
        - name: "ELASTIC_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: "elastic-credentials"
              key: "password"
        - name: "ELASTIC_USERNAME"
          valueFrom:
            secretKeyRef:
              name: "elastic-credentials"
              key: "elastic-username"
        volumeMounts:
        - name: tls-secret
          mountPath: /usr/share/elasticsearch/config/ssl
        - name: data
          mountPath: /usr/share/elasticsearch/data
      initContainers:
      - image: alpine:3.6
        name: elastic-init-sysctl
        command: ["/bin/sh","-c"]
        args: ["sysctl -w vm.max_map_count=262144; chown -R 1000:1000 /usr/share/elasticsearch/data"]
        securityContext:
          privileged: true
        volumeMounts:
        - name: data
          mountPath: /usr/share/elasticsearch/data
      volumes:
      - name: tls-secret
        secret:
          secretName: nginx-tls
          items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
      - name: data
        azureFile:
          secretName: {{ .Values.secret.name }}
          shareName: elk-1
          readOnly: false
          subPath: $(POD_NAME)