apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.kibana.deployment.name }}
  labels:
    app: {{ .Values.kibana.deployment.app }}
spec:
  replicas: {{ .Values.kibana.deployment.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.kibana.deployment.app }}
  template:
    metadata:
      labels:
        app: {{ .Values.kibana.deployment.app }}
    spec:
      containers:
      - name: {{ .Values.kibana.deployment.app }}
        image: "{{ .Values.kibana.deployment.image }}:{{ .Values.kibana.deployment.tag }}"
        imagePullPolicy: {{ .Values.kibana.deployment.pullPolicy }}
        ports:
        - containerPort: {{ .Values.kibana.deployment.containerPort }}
        env:
        - name: ELASTICSEARCH_HOSTS
          value: http://{{ .Values.elastic.service.name }}
        - name: "ELASTICSEARCH_USERNAME"
          valueFrom:
            secretKeyRef:
              name: "elastic-credentials"
              key: "kibana-username"
        - name: "ELASTICSEARCH_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: "elastic-credentials"
              key: "password"
        - name: XPACK_SECURITY_ENABLED
          value: "true"
        volumeMounts:
        - name: config-volume
          mountPath: /usr/share/kibana/config
      volumes:
        - name: config-volume
          configMap:
            name: kibana-config
            items:
              - key: kibana.yml
                path: kibana.yml