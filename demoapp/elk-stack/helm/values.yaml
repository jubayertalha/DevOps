elastic:
  deployment:
    name: elastic-search
    app: elastic-search
    replicas: 2
    image: elasticsearch
    tag: 8.5.3
    containerPortDB: 9200
    containerPortDBName: db
    containerPortTrans: 9300
    containerPortTransName: trans
    pullPolicy: Always

  service:
    name: elastic-search-service
    port: 80
    type: LoadBalancer

logstash:
  deployment:
    name: logstash-deployment
    app: logstash
    replicas: 1
    image: logstash
    tag: 8.5.3
    containerPort: 5044
    pullPolicy: Always

  service:
    name: logstash-service
    port: 5044

filebeat:
  deployment:
    name: filebeat-deployment
    app: filebeat
    image: elastic/filebeat
    tag: 8.5.3
    pullPolicy: Always

kibana:
  deployment:
    name: kibana-deployment
    app: kibana
    replicas: 1
    image: kibana
    tag: 8.5.3
    containerPort: 5601
    pullPolicy: Always

  service:
    name: kibana-service
    port: 80
    type: LoadBalancer

fleet:
  deployment:
    name: fleetdeployment
    app: elasticagent
    replicas: 1
    image: docker.elastic.co/beats/elastic-agent
    tag: 8.5.3
    containerPort: 8220
    pullPolicy: Always

  service:
    name: fleetservice
    port: 443
    type: LoadBalancer
  
ingress:
  name: elk-ingress
  class: nginx
  path: /
  pathType: Prefix

secret:
  name: storage-secret
  type: Opaque
  azurestorageaccountname: storageacc2211
  azurestorageaccountkey: "hB1Z5skpT97dHCAE3A//b6kBon3BBxXe2xsr9XxSuTr0+KNfFgfS1DjaSYjyd94S/DrbEVwm3SbE+AStkmLQwg=="

volume:
  name: es-pv
  storage: 10Gi
  accessModes: ReadWriteOnce
  reclaimPolicy: Retain
  handle: "es-pv-elk"
  sharename: elk

pvc:
  name: es-pvc
  accessModes: ReadWriteOnce
  storage: 10Gi